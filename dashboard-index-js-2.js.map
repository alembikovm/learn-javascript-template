{"version":3,"sources":["webpack:///./src/components/sortable-table/index.js","webpack:///./src/components/range-picker/index.js","webpack:///./src/components/column-chart/index.js","webpack:///./src/pages/dashboard/bestsellers-header.js","webpack:///./src/pages/dashboard/index.js","webpack:///./src/utils/fetch-json.js"],"names":["SortableTable","constructor","headersConfig","url","sorted","id","find","item","sortable","order","isSortLocally","step","start","end","this","async","bottom","element","getBoundingClientRect","document","documentElement","clientHeight","loading","data","loadData","update","event","column","target","closest","dataset","newOrder","asc","desc","toggleOrder","append","subElements","arrow","sortLocally","sortOnServer","URL","render","wrapper","createElement","innerHTML","getTable","firstElementChild","getSubElements","renderRows","initEventListeners","searchParams","set","classList","add","fetchJson","remove","addRows","body","getTableRows","rows","childNodes","getTableHeader","map","getHeaderRow","join","title","getHeaderSortingArrow","getTableBody","getTableRow","template","header","addEventListener","onSortClick","onWindowScroll","sortedData","sortData","length","arr","sortType","customSorting","direction","sort","a","b","localeCompare","querySelectorAll","reduce","accum","subElement","removeEventListener","destroy","RangePicker","date","toLocaleString","dateStyle","from","Date","to","isOpen","contains","isRangePicker","close","showDateFrom","selected","formatDate","Promise","resolve","elem","input","selector","onDocumentClick","toggle","onSelectorClick","renderDateRangePicker","onRangePickerCellClick","showDate1","showDate2","setMonth","getMonth","renderCalendar","controlLeft","querySelector","controlRight","prev","next","renderHighlight","cell","value","cellDate","toISOString","selectedFromElem","selectedToElem","showDate","setDate","monthStr","month","table","dayIndex","getDay","getDate","dateValue","selectingFrom","dispatchEvent","CustomEvent","bubbles","detail","ColumnChart","label","link","getColumnBody","maxValue","Math","max","scale","chartHeight","percent","toFixed","floor","getLink","headerData","bodyData","textContent","Page","ORDERS","SALES","CUSTOMERS","encodeURIComponent","ordersData","salesData","customersData","all","Object","values","components","sortableTable","getDataForColumnCharts","ordersDataTotal","salesDataTotal","customersDataTotal","ordersChart","salesChart","customersChart","getTime","rangePicker","initComponents","renderComponents","keys","forEach","component","root","$element","updateChartsComponents","updateTableComponent","params","response","fetch","toString","err","FetchError","ok","errorText","statusText","json","error","message","status","Error","super","window","reason","alert"],"mappings":"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","file":"dashboard-index-js-2.js","sourcesContent":["import fetchJson from \"../../utils/fetch-json.js\";\r\n\r\nconst BACKEND_URL = 'https://course-js.javascript.ru';\r\n\r\nexport default class SortableTable {\r\n  element;\r\n  subElements = {};\r\n  data = [];\r\n  loading = false;\r\n  step = 20;\r\n  start = 1;\r\n  end = this.start + this.step;\r\n\r\n  onWindowScroll = async() => {\r\n    const { bottom } = this.element.getBoundingClientRect();\r\n    const { id, order } = this.sorted;\r\n\r\n    if (bottom < document.documentElement.clientHeight && !this.loading && !this.isSortLocally) {\r\n      this.start = this.end;\r\n      this.end = this.start + this.step;\r\n\r\n      this.loading = true;\r\n\r\n      const data = await this.loadData(id, order, this.start, this.end);\r\n      this.update(data);\r\n\r\n      this.loading = false;\r\n    }\r\n  };\r\n\r\n  onSortClick = event => {\r\n    const column = event.target.closest('[data-sortable=\"true\"]');\r\n    const toggleOrder = order => {\r\n      const orders = {\r\n        asc: 'desc',\r\n        desc: 'asc'\r\n      };\r\n\r\n      return orders[order];\r\n    };\r\n\r\n    if (column) {\r\n      const { id, order } = column.dataset;\r\n      const newOrder = toggleOrder(order);\r\n\r\n      this.sorted = {\r\n        id,\r\n        order: newOrder\r\n      };\r\n\r\n      column.dataset.order = newOrder;\r\n      column.append(this.subElements.arrow);\r\n\r\n      if (this.isSortLocally) {\r\n        this.sortLocally(id, newOrder);\r\n      } else {\r\n        this.sortOnServer(id, newOrder);\r\n      }\r\n    }\r\n  };\r\n\r\n  constructor(headersConfig = [], {\r\n    url = '',\r\n    sorted = {\r\n      id: headersConfig.find(item => item.sortable).id,\r\n      order: 'asc'\r\n    },\r\n    isSortLocally = false,\r\n    step = 20,\r\n    start = 1,\r\n    end = start + step\r\n  } = {}) {\r\n\r\n    this.headersConfig = headersConfig;\r\n    this.url = new URL(url, BACKEND_URL);\r\n    this.sorted = sorted;\r\n    this.isSortLocally = isSortLocally;\r\n    this.step = step;\r\n    this.start = start;\r\n    this.end = end;\r\n\r\n    this.render();\r\n  }\r\n\r\n  async render() {\r\n    const {id, order} = this.sorted;\r\n    const wrapper = document.createElement('div');\r\n\r\n    wrapper.innerHTML = this.getTable();\r\n\r\n    const element = wrapper.firstElementChild;\r\n\r\n    this.element = element;\r\n    this.subElements = this.getSubElements(element);\r\n\r\n    const data = await this.loadData(id, order, this.start, this.end);\r\n\r\n    this.renderRows(data);\r\n    this.initEventListeners();\r\n  }\r\n\r\n  async loadData(id, order, start = this.start, end = this.end) {\r\n    this.url.searchParams.set('_sort', id);\r\n    this.url.searchParams.set('_order', order);\r\n    this.url.searchParams.set('_start', start);\r\n    this.url.searchParams.set('_end', end);\r\n\r\n    this.element.classList.add('sortable-table_loading');\r\n\r\n    const data = await fetchJson(this.url);\r\n\r\n    this.element.classList.remove('sortable-table_loading');\r\n\r\n    return data;\r\n  }\r\n\r\n  addRows(data) {\r\n    this.data = data;\r\n\r\n    this.subElements.body.innerHTML = this.getTableRows(data);\r\n  }\r\n\r\n  update(data) {\r\n    const rows = document.createElement('div');\r\n\r\n    this.data = [...this.data, ...data];\r\n    rows.innerHTML = this.getTableRows(data);\r\n\r\n    this.subElements.body.append(...rows.childNodes);\r\n  }\r\n\r\n  getTableHeader() {\r\n    return `<div data-element=\"header\" class=\"sortable-table__header sortable-table__row\">\r\n      ${this.headersConfig.map(item => this.getHeaderRow(item)).join('')}\r\n    </div>`;\r\n  }\r\n\r\n  getHeaderRow({id, title, sortable}) {\r\n    const order = this.sorted.id === id ? this.sorted.order : 'asc';\r\n\r\n    return `\r\n      <div class=\"sortable-table__cell\" data-id=\"${id}\" data-sortable=\"${sortable}\" data-order=\"${order}\">\r\n        <span>${title}</span>\r\n        ${this.getHeaderSortingArrow(id)}\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  getHeaderSortingArrow(id) {\r\n    const isOrderExist = this.sorted.id === id ? this.sorted.order : '';\r\n\r\n    return isOrderExist\r\n      ? `<span data-element=\"arrow\" class=\"sortable-table__sort-arrow\">\r\n          <span class=\"sort-arrow\"></span>\r\n        </span>`\r\n      : '';\r\n  }\r\n\r\n  getTableBody(data) {\r\n    return `\r\n      <div data-element=\"body\" class=\"sortable-table__body\">\r\n        ${this.getTableRows(data)}\r\n      </div>`;\r\n  }\r\n\r\n  getTableRows(data) {\r\n    return data.map(item => `\r\n      <div class=\"sortable-table__row\">\r\n        ${this.getTableRow(item, data)}\r\n      </div>`\r\n    ).join('');\r\n  }\r\n\r\n  getTableRow(item) {\r\n    const cells = this.headersConfig.map(({id, template}) => {\r\n      return {\r\n        id,\r\n        template\r\n      };\r\n    });\r\n\r\n    return cells.map(({id, template}) => {\r\n      return template\r\n        ? template(item[id])\r\n        : `<div class=\"sortable-table__cell\">${item[id]}</div>`;\r\n    }).join('');\r\n  }\r\n\r\n  getTable() {\r\n    return `\r\n      <div class=\"sortable-table\">\r\n        ${this.getTableHeader()}\r\n        ${this.getTableBody(this.data)}\r\n\r\n        <div data-element=\"loading\" class=\"loading-line sortable-table__loading-line\"></div>\r\n\r\n        <div data-element=\"emptyPlaceholder\" class=\"sortable-table__empty-placeholder\">\r\n          No products\r\n        </div>\r\n      </div>`;\r\n  }\r\n\r\n  initEventListeners() {\r\n    this.subElements.header.addEventListener('pointerdown', this.onSortClick);\r\n    document.addEventListener('scroll', this.onWindowScroll);\r\n  }\r\n\r\n  sortLocally(id, order) {\r\n    const sortedData = this.sortData(id, order);\r\n\r\n    this.subElements.body.innerHTML = this.getTableRows(sortedData);\r\n  }\r\n\r\n  async sortOnServer(id, order) {\r\n    const start = 1;\r\n    const end = start + this.step;\r\n    const data = await this.loadData(id, order, start, end);\r\n\r\n    this.renderRows(data);\r\n  }\r\n\r\n  renderRows(data) {\r\n    if (data.length) {\r\n      this.element.classList.remove('sortable-table_empty');\r\n      this.addRows(data);\r\n    } else {\r\n      this.element.classList.add('sortable-table_empty');\r\n    }\r\n  }\r\n\r\n  sortData(id, order) {\r\n    const arr = [...this.data];\r\n    const column = this.headersConfig.find(item => item.id === id);\r\n    const {sortType, customSorting} = column;\r\n    const direction = order === 'asc' ? 1 : -1;\r\n\r\n    return arr.sort((a, b) => {\r\n      switch (sortType) {\r\n        case 'number':\r\n          return direction * (a[id] - b[id]);\r\n        case 'string':\r\n          return direction * a[id].localeCompare(b[id], 'ru');\r\n        case 'custom':\r\n          return direction * customSorting(a, b);\r\n        default:\r\n          return direction * (a[id] - b[id]);\r\n      }\r\n    });\r\n  }\r\n\r\n  getSubElements(element) {\r\n    const elements = element.querySelectorAll('[data-element]');\r\n\r\n    return [...elements].reduce((accum, subElement) => {\r\n      accum[subElement.dataset.element] = subElement;\r\n\r\n      return accum;\r\n    }, {});\r\n  }\r\n\r\n  remove() {\r\n    this.element.remove();\r\n    document.removeEventListener('scroll', this.onWindowScroll);\r\n  }\r\n\r\n  destroy() {\r\n    this.remove();\r\n    this.subElements = {};\r\n  }\r\n}\r\n","export default class RangePicker {\r\n  element = null;\r\n  subElements = {};\r\n  selectingFrom = true;\r\n  selected = {\r\n    from: new Date(),\r\n    to: new Date()\r\n  };\r\n\r\n  static formatDate (date) {\r\n    return date.toLocaleString('ru', {dateStyle: 'short'})\r\n  }\r\n\r\n  onDocumentClick = event => {\r\n    const isOpen = this.element.classList.contains('rangepicker_open');\r\n    const isRangePicker = this.element.contains(event.target);\r\n\r\n    if (isOpen && !isRangePicker) {\r\n      this.close();\r\n    }\r\n  };\r\n\r\n  constructor({from = new Date(), to = new Date()} = {}) {\r\n    this.showDateFrom = new Date(from);\r\n    this.selected = {from, to};\r\n\r\n    this.render();\r\n  }\r\n\r\n  get template () {\r\n    const from = RangePicker.formatDate(this.selected.from);\r\n    const to = RangePicker.formatDate(this.selected.to);\r\n\r\n    return `<div class=\"rangepicker\">\r\n      <div class=\"rangepicker__input\" data-elem=\"input\">\r\n        <span data-elem=\"from\">${from}</span> -\r\n        <span data-elem=\"to\">${to}</span>\r\n      </div>\r\n      <div class=\"rangepicker__selector\" data-elem=\"selector\"></div>\r\n    </div>`;\r\n  }\r\n\r\n  render() {\r\n    const element = document.createElement('div');\r\n\r\n    element.innerHTML = this.template;\r\n\r\n    this.element = element.firstElementChild;\r\n    this.subElements = this.getSubElements(element);\r\n\r\n    this.initEventListeners();\r\n\r\n    return Promise.resolve(this.element);\r\n  }\r\n\r\n  getSubElements (element) {\r\n    const subElements = {};\r\n\r\n    for (const subElement of element.querySelectorAll('[data-elem]')) {\r\n      subElements[subElement.dataset.elem] = subElement;\r\n    }\r\n\r\n    return subElements;\r\n  }\r\n\r\n  initEventListeners () {\r\n    const {input, selector} = this.subElements;\r\n\r\n    document.addEventListener('click', this.onDocumentClick, true);\r\n    input.addEventListener('click', () => this.toggle());\r\n    selector.addEventListener('click', event => this.onSelectorClick(event));\r\n  }\r\n\r\n  toggle() {\r\n    this.element.classList.toggle('rangepicker_open');\r\n    this.renderDateRangePicker();\r\n  }\r\n\r\n  onSelectorClick({target}) {\r\n    if (target.classList.contains('rangepicker__cell')) {\r\n      this.onRangePickerCellClick(target);\r\n    }\r\n  }\r\n\r\n  close() {\r\n    this.element.classList.remove('rangepicker_open');\r\n  }\r\n\r\n  renderDateRangePicker() {\r\n    const showDate1 = new Date(this.showDateFrom);\r\n    const showDate2 = new Date(this.showDateFrom);\r\n    const { selector } = this.subElements;\r\n\r\n    showDate2.setMonth(showDate2.getMonth() + 1);\r\n\r\n    selector.innerHTML = `\r\n      <div class=\"rangepicker__selector-arrow\"></div>\r\n      <div class=\"rangepicker__selector-control-left\"></div>\r\n      <div class=\"rangepicker__selector-control-right\"></div>\r\n      ${this.renderCalendar(showDate1)}\r\n      ${this.renderCalendar(showDate2)}\r\n    `;\r\n\r\n    const controlLeft = selector.querySelector('.rangepicker__selector-control-left');\r\n    const controlRight = selector.querySelector('.rangepicker__selector-control-right');\r\n\r\n    controlLeft.addEventListener('click', () => this.prev());\r\n    controlRight.addEventListener('click', () => this.next());\r\n\r\n    this.renderHighlight();\r\n  }\r\n\r\n  prev () {\r\n    this.showDateFrom.setMonth(this.showDateFrom.getMonth() - 1);\r\n    this.renderDateRangePicker();\r\n  }\r\n\r\n  next () {\r\n    this.showDateFrom.setMonth(this.showDateFrom.getMonth() + 1);\r\n    this.renderDateRangePicker();\r\n  }\r\n\r\n  renderHighlight() {\r\n    const { from, to } = this.selected;\r\n\r\n    for (const cell of this.element.querySelectorAll('.rangepicker__cell')) {\r\n      const { value } = cell.dataset;\r\n      const cellDate = new Date(value);\r\n\r\n      cell.classList.remove('rangepicker__selected-from');\r\n      cell.classList.remove('rangepicker__selected-between');\r\n      cell.classList.remove('rangepicker__selected-to');\r\n\r\n      if (from && value === from.toISOString()) {\r\n        cell.classList.add('rangepicker__selected-from');\r\n      } else if (to && value === to.toISOString()) {\r\n        cell.classList.add('rangepicker__selected-to');\r\n      } else if (from && to && cellDate >= from && cellDate <= to) {\r\n        cell.classList.add('rangepicker__selected-between');\r\n      }\r\n    }\r\n\r\n    if (from) {\r\n      const selectedFromElem = this.element.querySelector(`[data-value=\"${from.toISOString()}\"]`);\r\n      if (selectedFromElem) {\r\n        selectedFromElem.closest('.rangepicker__cell').classList.add('rangepicker__selected-from');\r\n      }\r\n    }\r\n\r\n    if (to) {\r\n      const selectedToElem = this.element.querySelector(`[data-value=\"${to.toISOString()}\"]`);\r\n      if (selectedToElem) {\r\n        selectedToElem.closest('.rangepicker__cell').classList.add('rangepicker__selected-to');\r\n      }\r\n    }\r\n  }\r\n\r\n  renderCalendar(showDate) {\r\n    const date = new Date(showDate);\r\n    const getGridStartIndex = dayIndex => {\r\n      const index = dayIndex === 0 ? 6 : (dayIndex - 1); // make Sunday (0) the last day\r\n      return index + 1;\r\n    };\r\n\r\n    date.setDate(1);\r\n\r\n    // text-transform: capitalize\r\n    const monthStr = date.toLocaleString('ru', {month: 'long'});\r\n\r\n    let table = `<div class=\"rangepicker__calendar\">\r\n      <div class=\"rangepicker__month-indicator\">\r\n        <time datetime=${monthStr}>${monthStr}</time>\r\n      </div>\r\n      <div class=\"rangepicker__day-of-week\">\r\n        <div>Пн</div><div>Вт</div><div>Ср</div><div>Чт</div><div>Пт</div><div>Сб</div><div>Вс</div>\r\n      </div>\r\n      <div class=\"rangepicker__date-grid\">\r\n    `;\r\n\r\n    // first day of month starts after a space\r\n    // * * * 1 2 3 4\r\n    table += `\r\n      <button type=\"button\"\r\n        class=\"rangepicker__cell\"\r\n        data-value=\"${date.toISOString()}\"\r\n        style=\"--start-from: ${getGridStartIndex(date.getDay())}\">\r\n          ${date.getDate()}\r\n      </button>`;\r\n\r\n    date.setDate(2);\r\n\r\n    while (date.getMonth() === showDate.getMonth()) {\r\n      table += `\r\n        <button type=\"button\"\r\n          class=\"rangepicker__cell\"\r\n          data-value=\"${date.toISOString()}\">\r\n            ${date.getDate()}\r\n        </button>`;\r\n\r\n      date.setDate(date.getDate() + 1);\r\n    }\r\n\r\n    // close the table\r\n    table += '</div></div>';\r\n\r\n    return table;\r\n  }\r\n\r\n  onRangePickerCellClick(target) {\r\n    const { value } = target.dataset;\r\n\r\n    if (value) {\r\n      const dateValue = new Date(value);\r\n\r\n      if (this.selectingFrom) {\r\n        this.selected = {\r\n          from: dateValue,\r\n          to:   null\r\n        };\r\n        this.selectingFrom = false;\r\n        this.renderHighlight();\r\n      } else {\r\n        if (dateValue > this.selected.from) {\r\n          this.selected.to = dateValue;\r\n        } else {\r\n          this.selected.to = this.selected.from;\r\n          this.selected.from = dateValue;\r\n        }\r\n\r\n        this.selectingFrom = true;\r\n        this.renderHighlight();\r\n      }\r\n\r\n      if (this.selected.from && this.selected.to) {\r\n        this.dispatchEvent();\r\n        this.close();\r\n        this.subElements.from.innerHTML = RangePicker.formatDate(this.selected.from);\r\n        this.subElements.to.innerHTML = RangePicker.formatDate(this.selected.to)\r\n      }\r\n    }\r\n  }\r\n\r\n  dispatchEvent () {\r\n    this.element.dispatchEvent(new CustomEvent('date-select', {\r\n      bubbles: true,\r\n      detail:  this.selected\r\n    }));\r\n  }\r\n\r\n  remove () {\r\n    this.element.remove();\r\n    // TODO: Warning! To remove listener  MUST be passes the same event phase\r\n    document.removeEventListener('click', this.onDocumentClick, true);\r\n  }\r\n\r\n  destroy() {\r\n    this.remove();\r\n    this.element = null;\r\n    this.subElements = {};\r\n    this.selectingFrom = true;\r\n    this.selected = {\r\n      from: new Date(),\r\n      to: new Date()\r\n    };\r\n\r\n    return this;\r\n  }\r\n}\r\n","export default class ColumnChart {\r\n  element;\r\n  subElements = {};\r\n  chartHeight = 50;\r\n\r\n  constructor({\r\n    data = [],\r\n    label = '',\r\n    link = '',\r\n    value = 0\r\n  } = {}) {\r\n    this.data = data;\r\n    this.label = label;\r\n    this.link = link;\r\n    this.value = value;\r\n\r\n    this.render();\r\n  }\r\n\r\n  getColumnBody(data) {\r\n    const maxValue = Math.max(...data);\r\n\r\n    return data\r\n    .map(item => {\r\n      const scale = this.chartHeight / maxValue;\r\n      const percent = (item / maxValue * 100).toFixed(0);\r\n\r\n      return `<div style=\"--value: ${Math.floor(item * scale)}\" data-tooltip=\"${percent}%\"></div>`;\r\n    })\r\n    .join('');\r\n  }\r\n\r\n  getLink() {\r\n    return this.link ? `<a class=\"column-chart__link\" href=\"${this.link}\">View all</a>` : '';\r\n  }\r\n\r\n  get template () {\r\n    return `\r\n      <div class=\"column-chart column-chart_loading\" style=\"--chart-height: ${this.chartHeight}\">\r\n        <div class=\"column-chart__title\">\r\n          Total ${this.label}\r\n          ${this.getLink()}\r\n        </div>\r\n        <div class=\"column-chart__container\">\r\n          <div data-element=\"header\" class=\"column-chart__header\">\r\n            ${this.value}\r\n          </div>\r\n          <div data-element=\"body\" class=\"column-chart__chart\">\r\n            ${this.getColumnBody(this.data)}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  async render() {\r\n    const element = document.createElement('div');\r\n\r\n    element.innerHTML = this.template;\r\n    this.element = element.firstElementChild;\r\n\r\n    if (this.data.length) {\r\n      this.element.classList.remove(`column-chart_loading`);\r\n    }\r\n\r\n    this.subElements = this.getSubElements(this.element);\r\n\r\n    return this.element;\r\n  }\r\n\r\n  getSubElements (element) {\r\n    const elements = element.querySelectorAll('[data-element]');\r\n\r\n    return [...elements].reduce((accum, subElement) => {\r\n      accum[subElement.dataset.element] = subElement;\r\n\r\n      return accum;\r\n    }, {});\r\n  }\r\n\r\n  update ({headerData, bodyData}) {\r\n    this.subElements.header.textContent = headerData;\r\n    this.subElements.body.innerHTML = this.getColumnBody(bodyData);\r\n  }\r\n\r\n  destroy() {\r\n    this.element.remove();\r\n  }\r\n}\r\n","const header = [\r\n  {\r\n    id: 'images',\r\n    title: 'Image',\r\n    sortable: false,\r\n    template: data => {\r\n      return `\r\n          <div class=\"sortable-table__cell\">\r\n            <img class=\"sortable-table-image\" alt=\"Image\" src=\"${data[0].url}\">\r\n          </div>\r\n        `;\r\n    }\r\n  },\r\n  {\r\n    id: 'title',\r\n    title: 'Name',\r\n    sortable: true,\r\n    sortType: 'string'\r\n  },\r\n  {\r\n    id: 'quantity',\r\n    title: 'Quantity',\r\n    sortable: true,\r\n    sortType: 'number'\r\n  },\r\n  {\r\n    id: 'price',\r\n    title: 'Price',\r\n    sortable: true,\r\n    sortType: 'number'\r\n  },\r\n  {\r\n    id: 'status',\r\n    title: 'Status',\r\n    sortable: true,\r\n    sortType: 'number',\r\n    template: data => {\r\n      return `<div class=\"sortable-table__cell\">\r\n          ${data > 0 ? 'Active' : 'Inactive'}\r\n        </div>`;\r\n    }\r\n  },\r\n];\r\n\r\nexport default header;\r\n","import RangePicker from '../../components/range-picker/index.js';\r\nimport SortableTable from '../../components/sortable-table/index.js';\r\nimport ColumnChart from '../../components/column-chart/index.js';\r\nimport header from './bestsellers-header.js';\r\n\r\nimport fetchJson from '../../utils/fetch-json.js';\r\n\r\nexport default class Page {\r\n  element;\r\n  subElements = {};\r\n  components = {};\r\n\r\n  async getDataForColumnCharts (from, to) {\r\n    const ORDERS = `${process.env.BACKEND_URL}api/dashboard/orders?from=${from.toISOString()}&to=${to.toISOString()}`;\r\n    const SALES = `${process.env.BACKEND_URL}api/dashboard/sales?from=${from.toISOString()}&to=${to.toISOString()}`;\r\n    const CUSTOMERS = `${process.env.BACKEND_URL}api/dashboard/customers?from=${encodeURIComponent(from.toISOString())}&to=${encodeURIComponent(to.toISOString())}`;\r\n\r\n    const ordersData = fetchJson(ORDERS);\r\n    const salesData = fetchJson(SALES);\r\n    const customersData = fetchJson(CUSTOMERS);\r\n\r\n    const data = await Promise.all([ordersData, salesData, customersData]);\r\n    return data.map(item => Object.values(item));\r\n  }\r\n\r\n  async updateTableComponent (from, to) {\r\n    const data = await fetchJson(`${process.env.BACKEND_URL}api/dashboard/bestsellers?_start=1&_end=20&from=${from.toISOString()}&to=${to.toISOString()}`);\r\n    this.components.sortableTable.addRows(data);\r\n  }\r\n\r\n  async updateChartsComponents (from, to) {\r\n    const [ordersData, salesData, customersData] = await this.getDataForColumnCharts(from, to);\r\n    const ordersDataTotal = ordersData.reduce((accum, item) => accum + item);\r\n    const salesDataTotal = salesData.reduce((accum, item) => accum + item);\r\n    const customersDataTotal = customersData.reduce((accum, item) => accum + item);\r\n\r\n    this.components.ordersChart.update({headerData: ordersDataTotal, bodyData: ordersData});\r\n    this.components.salesChart.update({headerData: '$' + salesDataTotal, bodyData: salesData});\r\n    this.components.customersChart.update({headerData: customersDataTotal, bodyData: customersData});\r\n  }\r\n\r\n  async initComponents () {\r\n    const to = new Date();\r\n    const from = new Date(to.getTime() - (30 * 24 * 60 * 60 * 1000));\r\n    const [ordersData, salesData, customersData] = await this.getDataForColumnCharts(from, to);\r\n\r\n    const rangePicker = new RangePicker({\r\n      from,\r\n      to\r\n    });\r\n\r\n    const sortableTable = new SortableTable(header, {\r\n      url: `api/dashboard/bestsellers?_start=1&_end=20&from=${from.toISOString()}&to=${to.toISOString()}`,\r\n      isSortLocally: true\r\n    });\r\n\r\n    const ordersChart = new ColumnChart({\r\n      data: ordersData,\r\n      label: 'orders',\r\n      value: ordersData.reduce((accum, item) => accum + item),\r\n      link: '#'\r\n    });\r\n\r\n    const salesChart = new ColumnChart({\r\n      data: salesData,\r\n      label: 'sales',\r\n      value: '$' + salesData.reduce((accum, item) => accum + item),\r\n    });\r\n\r\n    const customersChart = new ColumnChart({\r\n      data: customersData,\r\n      label: 'customers',\r\n      value: customersData.reduce((accum, item) => accum + item),\r\n    });\r\n\r\n    this.components.sortableTable = sortableTable;\r\n    this.components.ordersChart = ordersChart;\r\n    this.components.salesChart = salesChart;\r\n    this.components.customersChart = customersChart;\r\n    this.components.rangePicker = rangePicker;\r\n  }\r\n\r\n  get template () {\r\n    return `<div class=\"dashboard\">\r\n      <div class=\"content__top-panel\">\r\n        <h2 class=\"page-title\">Dashboard</h2>\r\n        <!-- RangePicker component -->\r\n        <div data-element=\"rangePicker\"></div>\r\n      </div>\r\n      <div data-element=\"chartsRoot\" class=\"dashboard__charts\">\r\n        <!-- column-chart components -->\r\n        <div data-element=\"ordersChart\" class=\"dashboard__chart_orders\"></div>\r\n        <div data-element=\"salesChart\" class=\"dashboard__chart_sales\"></div>\r\n        <div data-element=\"customersChart\" class=\"dashboard__chart_customers\"></div>\r\n      </div>\r\n\r\n      <h3 class=\"block-title\">Best sellers</h3>\r\n\r\n      <div data-element=\"sortableTable\">\r\n        <!-- sortable-table component -->\r\n      </div>\r\n    </div>`;\r\n  }\r\n\r\n  async render () {\r\n    const element = document.createElement('div');\r\n\r\n    element.innerHTML = this.template;\r\n\r\n    this.element = element.firstElementChild;\r\n    this.subElements = this.getSubElements(this.element);\r\n\r\n    await this.initComponents();\r\n\r\n    this.renderComponents();\r\n    this.initEventListeners();\r\n\r\n    return this.element;\r\n  }\r\n\r\n  renderComponents () {\r\n    Object.keys(this.components).forEach(component => {\r\n      const root = this.subElements[component];\r\n      const { element } = this.components[component];\r\n\r\n      root.append(element);\r\n    });\r\n  }\r\n\r\n  getSubElements ($element) {\r\n    const elements = $element.querySelectorAll('[data-element]');\r\n\r\n    return [...elements].reduce((accum, subElement) => {\r\n      accum[subElement.dataset.element] = subElement;\r\n\r\n      return accum;\r\n    }, {});\r\n  }\r\n\r\n  initEventListeners () {\r\n    this.components.rangePicker.element.addEventListener('date-select', event => {\r\n      const { from, to } = event.detail;\r\n      this.updateChartsComponents(from, to);\r\n      this.updateTableComponent(from, to);\r\n    });\r\n  }\r\n\r\n  destroy () {\r\n    for (const component of Object.values(this.components)) {\r\n      component.destroy();\r\n    }\r\n  }\r\n}\r\n","// same as fetch, but throws FetchError in case of errors\r\n// status >= 400 is an error\r\n// network error / json error are errors\r\n\r\nexport default async function(url, params) {\r\n  let response;\r\n\r\n  try {\r\n    // NOTE: \"toString\" call needed for correct work of \"jest-fetch-mock\"\r\n    response = await fetch(url.toString(), params);\r\n  } catch(err) {\r\n    throw new FetchError(response, \"Network error has occurred.\");\r\n  }\r\n\r\n  let body;\r\n\r\n  if (!response.ok) {\r\n    let errorText = response.statusText; // Not Found (for 404)\r\n\r\n    try {\r\n      body = await response.json();\r\n\r\n      errorText = (body.error && body.error.message) || (body.data && body.data.error && body.data.error.message) || errorText;\r\n    } catch (error) { /* ignore failed body */ }\r\n\r\n    let message = `Error ${response.status}: ${errorText}`;\r\n\r\n    throw new FetchError(response, body, message);\r\n  }\r\n\r\n  try {\r\n    return await response.json();\r\n  } catch(err) {\r\n    throw new FetchError(response, null, err.message);\r\n  }\r\n}\r\n\r\nexport class FetchError extends Error {\r\n  name = \"FetchError\";\r\n\r\n  constructor(response, body, message) {\r\n    super(message);\r\n    this.response = response;\r\n    this.body = body;\r\n  }\r\n}\r\n\r\n// handle uncaught failed fetch through\r\nwindow.addEventListener('unhandledrejection', event => {\r\n  if (event.reason instanceof FetchError) {\r\n    alert(event.reason.message);\r\n  }\r\n});\r\n\r\n"],"sourceRoot":""}